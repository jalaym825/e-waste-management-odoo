29-06-2024 10:22:47 error: [/auth/register] - userId is not defined
29-06-2024 10:22:53 error: [/auth/register] - userId is not defined
29-06-2024 10:25:02 error: [/auth/register] - userId is not defined
29-06-2024 10:25:03 error: [/auth/register] - userId is not defined
29-06-2024 10:25:04 error: [/auth/register] - userId is not defined
29-06-2024 10:25:12 error: [/auth/register] - userId is not defined
29-06-2024 10:26:05 error: [/auth/register] - userId is not defined
29-06-2024 10:26:41 error: [/auth/register] - 
Invalid `prisma.users.create()` invocation in
/Users/jalaymovaliya/Odoo-Project/src/api/auth/controller.js:40:44

  37 const salt = await bcrypt.genSalt(10);
  38 const hashedPassword = await bcrypt.hash(password, salt);
  39 
→ 40 const newUser = await prisma.users.create({
       data: {
         name: "Jalay",
         email: "jalaym123@gmail.com",
         id: "jalaym123",
         password: "$2b$10$N9yDUez1WBo6MgGYv8xfDe5wlcbBtxkSASe2Q7MleFNKY9VuH4v1y",
         phoneNumber: "1111111111",
         city: "Surat",
         country: "India",
         state: "Gujarat",
         zipCode: "123456",
         type: "INDIVIDUAL",
     +   sys_id: String
       }
     })

Argument `sys_id` is missing.
29-06-2024 10:29:33 error: [/auth/register] - 
Invalid `prisma.users.create()` invocation in
/Users/jalaymovaliya/Odoo-Project/src/api/auth/controller.js:40:44

  37 const salt = await bcrypt.genSalt(10);
  38 const hashedPassword = await bcrypt.hash(password, salt);
  39 
→ 40 const newUser = await prisma.users.create({
       data: {
         name: "Jalay",
         email: "jalaym123@gmail.com",
         id: "jalaym123",
         password: "$2b$10$4JKnJyc43ND2nDxW9xAMDOwPVeWDCS09QhXCeMvvivCuiu7gyHHwi",
         phoneNumber: "1111111111",
         city: "Surat",
         country: "India",
         state: "Gujarat",
         zipCode: "123456",
         type: "INDIVIDUAL"
               ~~~~~~~~~~~~
       }
     })

Invalid value for argument `type`. Expected UserType.
29-06-2024 10:29:53 info: [/auth/register] - success - undefined
29-06-2024 10:29:53 error: [/auth/register] - userId is not defined
29-06-2024 10:52:28 error: [/auth/login] - email is not defined
29-06-2024 10:53:12 error: [/auth/login] - email is not defined
29-06-2024 10:53:24 warn: [/auth/login] - invalid password
29-06-2024 10:53:24 error: [/auth/login] - email is not defined
29-06-2024 10:53:25 warn: [/auth/login] - invalid password
29-06-2024 10:53:25 error: [/auth/login] - email is not defined
29-06-2024 10:53:50 warn: [/auth/login] - invalid password
29-06-2024 10:53:50 debug: [/auth/login] - emailOrId: jalaym123@gmail.com
29-06-2024 10:53:54 info: [/auth/login] - success - jalaym123
29-06-2024 10:53:54 debug: [/auth/login] - emailOrId: jalaym123@gmail.com
29-06-2024 10:58:04 warn: [/middleware/verifyJWT] - token missing
29-06-2024 10:58:04 debug: [/middleware/verifyJWT] - token: undefined
29-06-2024 10:58:19 warn: [/middleware/verifyJWT] - token missing
29-06-2024 10:58:19 debug: [/middleware/verifyJWT] - token: undefined
29-06-2024 10:58:39 info: [/middleware/verifyJWT] - user: jalaym123 authenticated
29-06-2024 10:58:39 error: [/auth/getUser] - user is not defined
29-06-2024 10:59:23 info: [/middleware/verifyJWT] - user: jalaym123 authenticated
29-06-2024 10:59:23 info: [/auth/getUser] - success - jalaym123
29-06-2024 10:59:23 debug: [/auth/getUser] - id: jalaym123
29-06-2024 10:59:31 info: [/middleware/verifyJWT] - user: jalaym123 authenticated
29-06-2024 10:59:31 info: [/auth/getUser] - success - jalaym123
29-06-2024 10:59:31 debug: [/auth/getUser] - id: jalaym123
29-06-2024 11:29:09 info: [/middleware/verifyJWT] - user: jalaym123 authenticated
29-06-2024 11:29:09 info: [/auth/getUser] - success - jalaym123
29-06-2024 11:29:09 debug: [/auth/getUser] - id: jalaym123
29-06-2024 11:30:06 warn: [/middleware/isUser] - data missing
29-06-2024 11:30:06 debug: [/middleware/isUser] - email: undefined
29-06-2024 11:33:10 error: [/middleware/isUser] - Cannot read properties of undefined (reading 'toLowerCase')
29-06-2024 11:33:15 info: [/middleware/verifyJWT] - user: jalaym123 authenticated
29-06-2024 11:33:15 info: [/auth/getUser] - success - jalaym123
29-06-2024 11:33:15 debug: [/auth/getUser] - id: jalaym123
29-06-2024 11:43:22 error: [/middleware/isUser] - Cannot read properties of undefined (reading 'toLowerCase')
29-06-2024 11:43:36 error: [/middleware/isUser] - Cannot read properties of undefined (reading 'toLowerCase')
29-06-2024 11:43:36 error: [/middleware/isUser] - Cannot read properties of undefined (reading 'toLowerCase')
29-06-2024 11:44:11 error: [/middleware/isUser] - Cannot read properties of undefined (reading 'toLowerCase')
29-06-2024 11:51:52 error: [/middleware/isUser] - 
Invalid `prisma.users.findUnique()` invocation in
/Users/jalaymovaliya/Odoo-Project/src/utils/middleware.js:92:43

  89         email: emailOrId.toLowerCase(),
  90     },
  91 });
→ 92 user = user || await prisma.users.findUnique({
       where: {
         userId: "jalaym1",
         ~~~~~~
     ?   id?: String,
     ?   sys_id?: String,
     ?   email?: String,
     ?   AND?: UsersWhereInput | UsersWhereInput[],
     ?   OR?: UsersWhereInput[],
     ?   NOT?: UsersWhereInput | UsersWhereInput[],
     ?   name?: StringFilter | String,
     ?   password?: StringFilter | String,
     ?   type?: EnumUserTypeFilter | UserType,
     ?   phoneNumber?: StringFilter | String,
     ?   address?: StringNullableFilter | String | Null,
     ?   city?: StringNullableFilter | String | Null,
     ?   state?: StringNullableFilter | String | Null,
     ?   zipCode?: StringNullableFilter | String | Null,
     ?   country?: StringNullableFilter | String | Null,
     ?   createdAt?: DateTimeFilter | DateTime,
     ?   updatedAt?: DateTimeFilter | DateTime,
     ?   isVerified?: BoolFilter | Boolean,
     ?   collectionRequests?: CollectionRequestListRelationFilter,
     ?   payments?: PaymentListRelationFilter,
     ?   recycler?: RecyclerNullableRelationFilter | RecyclerWhereInput | Null,
     ?   verificationTokens?: VerificationTokensListRelationFilter
       }
     })

Unknown argument `userId`. Available options are marked with ?.
29-06-2024 11:52:14 error: [/middleware/isUser] - 
Invalid `prisma.users.findUnique()` invocation in
/Users/jalaymovaliya/Odoo-Project/src/utils/middleware.js:92:43

  89         email: emailOrId.toLowerCase(),
  90     },
  91 });
→ 92 user = user || await prisma.users.findUnique({
       where: {
         userId: "jalaym1",
         ~~~~~~
     ?   id?: String,
     ?   sys_id?: String,
     ?   email?: String,
     ?   AND?: UsersWhereInput | UsersWhereInput[],
     ?   OR?: UsersWhereInput[],
     ?   NOT?: UsersWhereInput | UsersWhereInput[],
     ?   name?: StringFilter | String,
     ?   password?: StringFilter | String,
     ?   type?: EnumUserTypeFilter | UserType,
     ?   phoneNumber?: StringFilter | String,
     ?   address?: StringNullableFilter | String | Null,
     ?   city?: StringNullableFilter | String | Null,
     ?   state?: StringNullableFilter | String | Null,
     ?   zipCode?: StringNullableFilter | String | Null,
     ?   country?: StringNullableFilter | String | Null,
     ?   createdAt?: DateTimeFilter | DateTime,
     ?   updatedAt?: DateTimeFilter | DateTime,
     ?   isVerified?: BoolFilter | Boolean,
     ?   collectionRequests?: CollectionRequestListRelationFilter,
     ?   payments?: PaymentListRelationFilter,
     ?   recycler?: RecyclerNullableRelationFilter | RecyclerWhereInput | Null,
     ?   verificationTokens?: VerificationTokensListRelationFilter
       }
     })

Unknown argument `userId`. Available options are marked with ?.
29-06-2024 11:52:15 warn: [/middleware/isUser] - user not found
29-06-2024 11:52:15 debug: [/middleware/isUser] - emailOrId: jalaym1
29-06-2024 11:52:19 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 11:52:19 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 11:52:19 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 11:52:19 error: [/middleware/mailSent] - 
Invalid `prisma.verificationTokens.findUnique()` invocation in
/Users/jalaymovaliya/Odoo-Project/src/utils/middleware.js:134:57

  131 
  132 const mailSent = async (req, res, next) => {
  133     try {
→ 134         let tokenData = await prisma.verificationTokens.findUnique({
                where: {
                  userId: "jalaym123",
              ?   id?: String,
              ?   AND?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
              ?   OR?: VerificationTokensWhereInput[],
              ?   NOT?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
              ?   token?: StringFilter | String,
              ?   createdAt?: DateTimeFilter | DateTime,
              ?   updatedAt?: DateTimeFilter | DateTime,
              ?   user?: UsersRelationFilter | UsersWhereInput
                }
              })

Argument `where` of type VerificationTokensWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.
29-06-2024 11:52:41 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 11:52:41 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 11:52:41 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 11:52:41 error: [/middleware/mailSent] - 
Invalid `prisma.verificationTokens.findUnique()` invocation in
/Users/jalaymovaliya/Odoo-Project/src/utils/middleware.js:132:57

  129 
  130 const mailSent = async (req, res, next) => {
  131     try {
→ 132         let tokenData = await prisma.verificationTokens.findUnique({
                where: {
                  userId: "jalaym123",
              ?   id?: String,
              ?   AND?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
              ?   OR?: VerificationTokensWhereInput[],
              ?   NOT?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
              ?   token?: StringFilter | String,
              ?   createdAt?: DateTimeFilter | DateTime,
              ?   updatedAt?: DateTimeFilter | DateTime,
              ?   user?: UsersRelationFilter | UsersWhereInput
                }
              })

Argument `where` of type VerificationTokensWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.
29-06-2024 11:52:42 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 11:52:42 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 11:52:42 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 11:52:42 error: [/middleware/mailSent] - 
Invalid `prisma.verificationTokens.findUnique()` invocation in
/Users/jalaymovaliya/Odoo-Project/src/utils/middleware.js:132:57

  129 
  130 const mailSent = async (req, res, next) => {
  131     try {
→ 132         let tokenData = await prisma.verificationTokens.findUnique({
                where: {
                  userId: "jalaym123",
              ?   id?: String,
              ?   AND?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
              ?   OR?: VerificationTokensWhereInput[],
              ?   NOT?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
              ?   token?: StringFilter | String,
              ?   createdAt?: DateTimeFilter | DateTime,
              ?   updatedAt?: DateTimeFilter | DateTime,
              ?   user?: UsersRelationFilter | UsersWhereInput
                }
              })

Argument `where` of type VerificationTokensWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.
29-06-2024 11:52:42 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 11:52:42 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 11:52:42 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 11:52:42 error: [/middleware/mailSent] - 
Invalid `prisma.verificationTokens.findUnique()` invocation in
/Users/jalaymovaliya/Odoo-Project/src/utils/middleware.js:132:57

  129 
  130 const mailSent = async (req, res, next) => {
  131     try {
→ 132         let tokenData = await prisma.verificationTokens.findUnique({
                where: {
                  userId: "jalaym123",
              ?   id?: String,
              ?   AND?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
              ?   OR?: VerificationTokensWhereInput[],
              ?   NOT?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
              ?   token?: StringFilter | String,
              ?   createdAt?: DateTimeFilter | DateTime,
              ?   updatedAt?: DateTimeFilter | DateTime,
              ?   user?: UsersRelationFilter | UsersWhereInput
                }
              })

Argument `where` of type VerificationTokensWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.
29-06-2024 11:52:43 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 11:52:43 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 11:52:43 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 11:52:43 error: [/middleware/mailSent] - 
Invalid `prisma.verificationTokens.findUnique()` invocation in
/Users/jalaymovaliya/Odoo-Project/src/utils/middleware.js:132:57

  129 
  130 const mailSent = async (req, res, next) => {
  131     try {
→ 132         let tokenData = await prisma.verificationTokens.findUnique({
                where: {
                  userId: "jalaym123",
              ?   id?: String,
              ?   AND?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
              ?   OR?: VerificationTokensWhereInput[],
              ?   NOT?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
              ?   token?: StringFilter | String,
              ?   createdAt?: DateTimeFilter | DateTime,
              ?   updatedAt?: DateTimeFilter | DateTime,
              ?   user?: UsersRelationFilter | UsersWhereInput
                }
              })

Argument `where` of type VerificationTokensWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.
29-06-2024 11:52:44 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 11:52:44 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 11:52:44 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 11:52:44 error: [/middleware/mailSent] - 
Invalid `prisma.verificationTokens.findUnique()` invocation in
/Users/jalaymovaliya/Odoo-Project/src/utils/middleware.js:132:57

  129 
  130 const mailSent = async (req, res, next) => {
  131     try {
→ 132         let tokenData = await prisma.verificationTokens.findUnique({
                where: {
                  userId: "jalaym123",
              ?   id?: String,
              ?   AND?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
              ?   OR?: VerificationTokensWhereInput[],
              ?   NOT?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
              ?   token?: StringFilter | String,
              ?   createdAt?: DateTimeFilter | DateTime,
              ?   updatedAt?: DateTimeFilter | DateTime,
              ?   user?: UsersRelationFilter | UsersWhereInput
                }
              })

Argument `where` of type VerificationTokensWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.
29-06-2024 11:52:49 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 11:52:49 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 11:52:49 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 11:52:49 error: [/middleware/mailSent] - 
Invalid `prisma.verificationTokens.findUnique()` invocation in
/Users/jalaymovaliya/Odoo-Project/src/utils/middleware.js:132:57

  129 
  130 const mailSent = async (req, res, next) => {
  131     try {
→ 132         let tokenData = await prisma.verificationTokens.findUnique({
                where: {
                  userId: "jalaym123",
              ?   id?: String,
              ?   AND?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
              ?   OR?: VerificationTokensWhereInput[],
              ?   NOT?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
              ?   token?: StringFilter | String,
              ?   createdAt?: DateTimeFilter | DateTime,
              ?   updatedAt?: DateTimeFilter | DateTime,
              ?   user?: UsersRelationFilter | UsersWhereInput
                }
              })

Argument `where` of type VerificationTokensWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.
29-06-2024 11:53:03 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 11:53:03 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 11:53:03 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 11:53:03 error: [/middleware/mailSent] - 
Invalid `prisma.verificationTokens.findUnique()` invocation in
/Users/jalaymovaliya/Odoo-Project/src/utils/middleware.js:132:57

  129 
  130 const mailSent = async (req, res, next) => {
  131     try {
→ 132         let tokenData = await prisma.verificationTokens.findUnique({
                where: {
                  userId: "jalaym123",
              ?   id?: String,
              ?   AND?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
              ?   OR?: VerificationTokensWhereInput[],
              ?   NOT?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
              ?   token?: StringFilter | String,
              ?   createdAt?: DateTimeFilter | DateTime,
              ?   updatedAt?: DateTimeFilter | DateTime,
              ?   user?: UsersRelationFilter | UsersWhereInput
                }
              })

Argument `where` of type VerificationTokensWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.
29-06-2024 11:53:03 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 11:53:03 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 11:53:03 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 11:53:03 error: [/middleware/mailSent] - 
Invalid `prisma.verificationTokens.findUnique()` invocation in
/Users/jalaymovaliya/Odoo-Project/src/utils/middleware.js:132:57

  129 
  130 const mailSent = async (req, res, next) => {
  131     try {
→ 132         let tokenData = await prisma.verificationTokens.findUnique({
                where: {
                  userId: "jalaym123",
              ?   id?: String,
              ?   AND?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
              ?   OR?: VerificationTokensWhereInput[],
              ?   NOT?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
              ?   token?: StringFilter | String,
              ?   createdAt?: DateTimeFilter | DateTime,
              ?   updatedAt?: DateTimeFilter | DateTime,
              ?   user?: UsersRelationFilter | UsersWhereInput
                }
              })

Argument `where` of type VerificationTokensWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.
29-06-2024 11:53:04 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 11:53:04 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 11:53:04 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 11:53:04 error: [/middleware/mailSent] - 
Invalid `prisma.verificationTokens.findUnique()` invocation in
/Users/jalaymovaliya/Odoo-Project/src/utils/middleware.js:132:57

  129 
  130 const mailSent = async (req, res, next) => {
  131     try {
→ 132         let tokenData = await prisma.verificationTokens.findUnique({
                where: {
                  userId: "jalaym123",
              ?   id?: String,
              ?   AND?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
              ?   OR?: VerificationTokensWhereInput[],
              ?   NOT?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
              ?   token?: StringFilter | String,
              ?   createdAt?: DateTimeFilter | DateTime,
              ?   updatedAt?: DateTimeFilter | DateTime,
              ?   user?: UsersRelationFilter | UsersWhereInput
                }
              })

Argument `where` of type VerificationTokensWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.
29-06-2024 11:53:18 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 11:53:18 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 11:53:18 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 11:53:18 error: [/auth/sendVerificationMail] - 
Invalid `prisma.verificationTokens.create()` invocation in
/Users/jalaymovaliya/Odoo-Project/src/api/auth/controller.js:203:67

  200 try {
  201     const user = req.user;
  202     const token = crypto.randomBytes(20).toString("hex");
→ 203     const verificationToken = await prisma.verificationTokens.create({
            data: {
              token: "aad346de3bf45bd6842d56429d7ced573063ab47",
              expiresAt: new Date("2024-06-30T06:23:18.105Z"),
              ~~~~~~~~~
              userId: "jalaym123",
          ?   id?: String,
          ?   createdAt?: DateTime,
          ?   updatedAt?: DateTime
            }
          })

Unknown argument `expiresAt`. Available options are marked with ?.
29-06-2024 11:53:19 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 11:53:19 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 11:53:19 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 11:53:19 error: [/auth/sendVerificationMail] - 
Invalid `prisma.verificationTokens.create()` invocation in
/Users/jalaymovaliya/Odoo-Project/src/api/auth/controller.js:203:67

  200 try {
  201     const user = req.user;
  202     const token = crypto.randomBytes(20).toString("hex");
→ 203     const verificationToken = await prisma.verificationTokens.create({
            data: {
              token: "ee27ef110a196448c6dd2b2fa1666187070b1e0d",
              expiresAt: new Date("2024-06-30T06:23:19.322Z"),
              ~~~~~~~~~
              userId: "jalaym123",
          ?   id?: String,
          ?   createdAt?: DateTime,
          ?   updatedAt?: DateTime
            }
          })

Unknown argument `expiresAt`. Available options are marked with ?.
29-06-2024 11:53:31 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 11:53:31 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 11:53:31 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 11:53:31 error: [/auth/sendVerificationMail] - 
Invalid `prisma.verificationTokens.create()` invocation in
/Users/jalaymovaliya/Odoo-Project/src/api/auth/controller.js:203:67

  200 try {
  201     const user = req.user;
  202     const token = crypto.randomBytes(20).toString("hex");
→ 203     const verificationToken = await prisma.verificationTokens.create({
            data: {
              token: "f23bd06057fd2da8d53cafb23f0278b3b89c0b05",
              expiresAt: new Date("2024-06-30T06:23:31.345Z"),
              id: "jalaym123",
          +   user: {
          +     create: UsersCreateWithoutVerificationTokensInput | UsersUncheckedCreateWithoutVerificationTokensInput,
          +     connectOrCreate: UsersCreateOrConnectWithoutVerificationTokensInput,
          +     connect: UsersWhereUniqueInput
          +   }
            }
          })

Argument `user` is missing.
29-06-2024 11:57:03 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 11:57:03 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 11:57:03 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 11:57:03 error: [/auth/sendVerificationMail] - 
Invalid `prisma.verificationTokens.create()` invocation in
/Users/jalaymovaliya/Odoo-Project/src/api/auth/controller.js:203:67

  200 try {
  201     const user = req.user;
  202     const token = crypto.randomBytes(20).toString("hex");
→ 203     const verificationToken = await prisma.verificationTokens.create({
            data: {
              token: "04a1f1be6b59fbede9c454e58e28c1436501cf73",
              expiresAt: new Date("2024-06-30T06:27:03.330Z"),
              id: "jalaym123",
          +   user: {
          +     create: UsersCreateWithoutVerificationTokensInput | UsersUncheckedCreateWithoutVerificationTokensInput,
          +     connectOrCreate: UsersCreateOrConnectWithoutVerificationTokensInput,
          +     connect: UsersWhereUniqueInput
          +   }
            }
          })

Argument `user` is missing.
29-06-2024 11:59:08 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 11:59:08 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 11:59:08 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 11:59:08 error: [/auth/sendVerificationMail] - 
Invalid `prisma.verificationTokens.create()` invocation in
/Users/jalaymovaliya/Odoo-Project/src/api/auth/controller.js:203:67

  200 try {
  201     const user = req.user;
  202     const token = crypto.randomBytes(20).toString("hex");
→ 203     const verificationToken = await prisma.verificationTokens.create({
            data: {
              token: "91fb64b2104ec4565c42f13b10ebea363459723f",
              expiresAt: new Date("2024-06-30T06:29:08.451Z"),
              id: "jalaym123",
          +   user: {
          +     create: UsersCreateWithoutVerificationTokensInput | UsersUncheckedCreateWithoutVerificationTokensInput,
          +     connectOrCreate: UsersCreateOrConnectWithoutVerificationTokensInput,
          +     connect: UsersWhereUniqueInput
          +   }
            }
          })

Argument `user` is missing.
29-06-2024 12:02:41 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 12:02:41 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 12:02:41 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 12:02:41 error: [/auth/sendVerificationMail] - 
Invalid `prisma.verificationTokens.upsert()` invocation in
/Users/jalaymovaliya/Odoo-Project/src/api/auth/controller.js:203:59

  200 try {
  201     const user = req.user;
  202     const secretToken = crypto.randomBytes(20).toString("hex");
→ 203     const tokenData = await prisma.verificationTokens.upsert({
            where: {
              userId: "jalaym123",
          ?   id?: String,
          ?   AND?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
          ?   OR?: VerificationTokensWhereInput[],
          ?   NOT?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
          ?   token?: StringFilter | String,
          ?   expiresAt?: DateTimeFilter | DateTime,
          ?   createdAt?: DateTimeFilter | DateTime,
          ?   updatedAt?: DateTimeFilter | DateTime,
          ?   user?: UsersNullableRelationFilter | UsersWhereInput | Null
            },
            update: {
              userId: "jalaym123",
              token: "264aa07c429fe8d372bd8475ff934d79444ab551",
              expiration: new Date("2024-06-29T07:32:41.320Z")
            },
            create: {
              sis_id: "jalaym123",
              token: "264aa07c429fe8d372bd8475ff934d79444ab551",
              expiration: new Date("2024-06-29T07:32:41.320Z")
            }
          })

Argument `where` of type VerificationTokensWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.
29-06-2024 12:05:36 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 12:05:36 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 12:05:36 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 12:05:36 error: [/auth/sendVerificationMail] - 
Invalid `prisma.verificationTokens.upsert()` invocation in
/Users/jalaymovaliya/Odoo-Project/src/api/auth/controller.js:203:59

  200 try {
  201     const user = req.user;
  202     const secretToken = crypto.randomBytes(20).toString("hex");
→ 203     const tokenData = await prisma.verificationTokens.upsert({
            where: {
              userId: "jalaym123",
          ?   id?: String,
          ?   AND?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
          ?   OR?: VerificationTokensWhereInput[],
          ?   NOT?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
          ?   token?: StringFilter | String,
          ?   expiresAt?: DateTimeFilter | DateTime,
          ?   createdAt?: DateTimeFilter | DateTime,
          ?   updatedAt?: DateTimeFilter | DateTime,
          ?   user?: UsersNullableRelationFilter | UsersWhereInput | Null
            },
            update: {
              userId: "jalaym123",
              token: "5fcda1ab1d8548bacde0f18e775f5e21bd347d46",
              expiration: new Date("2024-06-29T07:35:36.918Z")
            },
            create: {
              sis_id: "jalaym123",
              token: "5fcda1ab1d8548bacde0f18e775f5e21bd347d46",
              expiration: new Date("2024-06-29T07:35:36.918Z")
            }
          })

Argument `where` of type VerificationTokensWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.
29-06-2024 12:08:17 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 12:08:17 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 12:08:17 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 12:08:17 error: [/auth/sendVerificationMail] - 
Invalid `prisma.verificationTokens.upsert()` invocation in
/Users/jalaymovaliya/Odoo-Project/src/api/auth/controller.js:203:59

  200 try {
  201     const user = req.user;
  202     const secretToken = crypto.randomBytes(20).toString("hex");
→ 203     const tokenData = await prisma.verificationTokens.upsert({
            where: {
              userId: "jalaym123",
          ?   id?: String,
          ?   AND?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
          ?   OR?: VerificationTokensWhereInput[],
          ?   NOT?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
          ?   token?: StringFilter | String,
          ?   expiresAt?: DateTimeFilter | DateTime,
          ?   createdAt?: DateTimeFilter | DateTime,
          ?   updatedAt?: DateTimeFilter | DateTime,
          ?   user?: UsersNullableRelationFilter | UsersWhereInput | Null
            },
            update: {
              userId: "jalaym123",
              token: "65337c9a1762075a1549525b16691b7f23cc753c",
              expiration: new Date("2024-06-29T07:38:17.988Z")
            },
            create: {
              userId: "jalaym123",
              token: "65337c9a1762075a1549525b16691b7f23cc753c",
              expiration: new Date("2024-06-29T07:38:17.988Z")
            }
          })

Argument `where` of type VerificationTokensWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.
29-06-2024 12:08:18 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 12:08:18 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 12:08:18 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 12:08:18 error: [/auth/sendVerificationMail] - 
Invalid `prisma.verificationTokens.upsert()` invocation in
/Users/jalaymovaliya/Odoo-Project/src/api/auth/controller.js:203:59

  200 try {
  201     const user = req.user;
  202     const secretToken = crypto.randomBytes(20).toString("hex");
→ 203     const tokenData = await prisma.verificationTokens.upsert({
            where: {
              userId: "jalaym123",
          ?   id?: String,
          ?   AND?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
          ?   OR?: VerificationTokensWhereInput[],
          ?   NOT?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
          ?   token?: StringFilter | String,
          ?   expiresAt?: DateTimeFilter | DateTime,
          ?   createdAt?: DateTimeFilter | DateTime,
          ?   updatedAt?: DateTimeFilter | DateTime,
          ?   user?: UsersNullableRelationFilter | UsersWhereInput | Null
            },
            update: {
              userId: "jalaym123",
              token: "f588ce1d997ca4bd9800688bb4a61a2983dc0d71",
              expiration: new Date("2024-06-29T07:38:18.661Z")
            },
            create: {
              userId: "jalaym123",
              token: "f588ce1d997ca4bd9800688bb4a61a2983dc0d71",
              expiration: new Date("2024-06-29T07:38:18.661Z")
            }
          })

Argument `where` of type VerificationTokensWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.
29-06-2024 12:08:19 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 12:08:19 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 12:08:19 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 12:08:19 error: [/auth/sendVerificationMail] - 
Invalid `prisma.verificationTokens.upsert()` invocation in
/Users/jalaymovaliya/Odoo-Project/src/api/auth/controller.js:203:59

  200 try {
  201     const user = req.user;
  202     const secretToken = crypto.randomBytes(20).toString("hex");
→ 203     const tokenData = await prisma.verificationTokens.upsert({
            where: {
              userId: "jalaym123",
          ?   id?: String,
          ?   AND?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
          ?   OR?: VerificationTokensWhereInput[],
          ?   NOT?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
          ?   token?: StringFilter | String,
          ?   expiresAt?: DateTimeFilter | DateTime,
          ?   createdAt?: DateTimeFilter | DateTime,
          ?   updatedAt?: DateTimeFilter | DateTime,
          ?   user?: UsersNullableRelationFilter | UsersWhereInput | Null
            },
            update: {
              userId: "jalaym123",
              token: "2c1f8bc4d34e41cf799651b0567395027cea54b5",
              expiration: new Date("2024-06-29T07:38:19.188Z")
            },
            create: {
              userId: "jalaym123",
              token: "2c1f8bc4d34e41cf799651b0567395027cea54b5",
              expiration: new Date("2024-06-29T07:38:19.188Z")
            }
          })

Argument `where` of type VerificationTokensWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.
29-06-2024 12:08:20 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 12:08:20 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 12:08:20 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 12:08:20 error: [/auth/sendVerificationMail] - 
Invalid `prisma.verificationTokens.upsert()` invocation in
/Users/jalaymovaliya/Odoo-Project/src/api/auth/controller.js:203:59

  200 try {
  201     const user = req.user;
  202     const secretToken = crypto.randomBytes(20).toString("hex");
→ 203     const tokenData = await prisma.verificationTokens.upsert({
            where: {
              userId: "jalaym123",
          ?   id?: String,
          ?   AND?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
          ?   OR?: VerificationTokensWhereInput[],
          ?   NOT?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
          ?   token?: StringFilter | String,
          ?   expiresAt?: DateTimeFilter | DateTime,
          ?   createdAt?: DateTimeFilter | DateTime,
          ?   updatedAt?: DateTimeFilter | DateTime,
          ?   user?: UsersNullableRelationFilter | UsersWhereInput | Null
            },
            update: {
              userId: "jalaym123",
              token: "f9a0adbfb8ef4258a02f886284dfec9301ee9f88",
              expiration: new Date("2024-06-29T07:38:20.082Z")
            },
            create: {
              userId: "jalaym123",
              token: "f9a0adbfb8ef4258a02f886284dfec9301ee9f88",
              expiration: new Date("2024-06-29T07:38:20.082Z")
            }
          })

Argument `where` of type VerificationTokensWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.
29-06-2024 12:08:20 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 12:08:20 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 12:08:20 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 12:08:20 error: [/auth/sendVerificationMail] - 
Invalid `prisma.verificationTokens.upsert()` invocation in
/Users/jalaymovaliya/Odoo-Project/src/api/auth/controller.js:203:59

  200 try {
  201     const user = req.user;
  202     const secretToken = crypto.randomBytes(20).toString("hex");
→ 203     const tokenData = await prisma.verificationTokens.upsert({
            where: {
              userId: "jalaym123",
          ?   id?: String,
          ?   AND?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
          ?   OR?: VerificationTokensWhereInput[],
          ?   NOT?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
          ?   token?: StringFilter | String,
          ?   expiresAt?: DateTimeFilter | DateTime,
          ?   createdAt?: DateTimeFilter | DateTime,
          ?   updatedAt?: DateTimeFilter | DateTime,
          ?   user?: UsersNullableRelationFilter | UsersWhereInput | Null
            },
            update: {
              userId: "jalaym123",
              token: "b07c2159bdf8d2c7c7acb7462168500e0f031f62",
              expiration: new Date("2024-06-29T07:38:20.676Z")
            },
            create: {
              userId: "jalaym123",
              token: "b07c2159bdf8d2c7c7acb7462168500e0f031f62",
              expiration: new Date("2024-06-29T07:38:20.676Z")
            }
          })

Argument `where` of type VerificationTokensWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.
29-06-2024 12:08:21 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 12:08:21 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 12:08:21 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 12:08:21 error: [/auth/sendVerificationMail] - 
Invalid `prisma.verificationTokens.upsert()` invocation in
/Users/jalaymovaliya/Odoo-Project/src/api/auth/controller.js:203:59

  200 try {
  201     const user = req.user;
  202     const secretToken = crypto.randomBytes(20).toString("hex");
→ 203     const tokenData = await prisma.verificationTokens.upsert({
            where: {
              userId: "jalaym123",
          ?   id?: String,
          ?   AND?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
          ?   OR?: VerificationTokensWhereInput[],
          ?   NOT?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
          ?   token?: StringFilter | String,
          ?   expiresAt?: DateTimeFilter | DateTime,
          ?   createdAt?: DateTimeFilter | DateTime,
          ?   updatedAt?: DateTimeFilter | DateTime,
          ?   user?: UsersNullableRelationFilter | UsersWhereInput | Null
            },
            update: {
              userId: "jalaym123",
              token: "d9134df60cfb2f1095025f451dc2d2f464176dac",
              expiration: new Date("2024-06-29T07:38:21.683Z")
            },
            create: {
              userId: "jalaym123",
              token: "d9134df60cfb2f1095025f451dc2d2f464176dac",
              expiration: new Date("2024-06-29T07:38:21.683Z")
            }
          })

Argument `where` of type VerificationTokensWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.
29-06-2024 12:34:01 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 12:34:01 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 12:34:01 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 12:34:01 error: [/middleware/mailSent] - 
Invalid `prisma.verificationTokens.findUnique()` invocation in
/Users/jalaymovaliya/Odoo-Project/src/utils/middleware.js:132:57

  129 
  130 const mailSent = async (req, res, next) => {
  131     try {
→ 132         let tokenData = await prisma.verificationTokens.findUnique({
                where: {
                  id: "jalaym123",
                  ~~
              ?   userId?: String,
              ?   AND?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
              ?   OR?: VerificationTokensWhereInput[],
              ?   NOT?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
              ?   token?: StringFilter | String,
              ?   expiresAt?: DateTimeFilter | DateTime,
              ?   createdAt?: DateTimeFilter | DateTime,
              ?   updatedAt?: DateTimeFilter | DateTime,
              ?   user?: UsersRelationFilter | UsersWhereInput
                }
              })

Unknown argument `id`. Did you mean `OR`? Available options are marked with ?.
29-06-2024 12:34:16 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 12:34:16 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 12:34:16 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 12:34:16 error: [/auth/sendVerificationMail] - 
Invalid `prisma.verificationTokens.upsert()` invocation in
/Users/jalaymovaliya/Odoo-Project/src/api/auth/controller.js:203:59

  200 try {
  201     const user = req.user;
  202     const secretToken = crypto.randomBytes(20).toString("hex");
→ 203     const tokenData = await prisma.verificationTokens.upsert({
            where: {
              userId: "jalaym123"
            },
            update: {
              userId: "jalaym123",
              token: "b89444604936187033c6927dd852c19f3ea12383",
              expiration: new Date("2024-06-29T08:04:16.223Z")
            },
            create: {
              userId: "jalaym123",
              token: "b89444604936187033c6927dd852c19f3ea12383",
              expiration: new Date("2024-06-29T08:04:16.223Z"),
          +   expiresAt: DateTime
            }
          })

Argument `expiresAt` is missing.
29-06-2024 12:34:33 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 12:34:34 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 12:34:34 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 12:34:34 error: [/auth/sendVerificationMail] - Missing credentials for "PLAIN"
29-06-2024 12:35:58 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 12:35:58 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 12:35:58 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 12:35:59 error: [/auth/sendVerificationMail] - Invalid login: 535-5.7.8 Username and Password not accepted. For more information, go to
535 5.7.8  https://support.google.com/mail/?p=BadCredentials d9443c01a7336-1fac1535b6esm25908985ad.156 - gsmtp
29-06-2024 12:36:31 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 12:36:31 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 12:36:31 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 12:36:33 error: [/auth/sendVerificationMail] - Invalid login: 535-5.7.8 Username and Password not accepted. For more information, go to
535 5.7.8  https://support.google.com/mail/?p=BadCredentials d9443c01a7336-1fac10d14c1sm26722655ad.12 - gsmtp
29-06-2024 12:38:33 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 12:38:33 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 12:38:33 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 12:38:34 error: [/auth/sendVerificationMail] - Invalid login: 535-5.7.8 Username and Password not accepted. For more information, go to
535 5.7.8  https://support.google.com/mail/?p=BadCredentials d9443c01a7336-1fac15789b7sm25974275ad.239 - gsmtp
29-06-2024 12:45:02 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 12:45:02 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 12:45:02 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 12:45:04 error: [/auth/sendVerificationMail] - No recipients defined
29-06-2024 12:46:01 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 12:46:01 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 12:46:01 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 12:46:03 error: [/auth/sendVerificationMail] - No recipients defined
29-06-2024 12:46:19 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 12:46:19 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 12:46:19 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 12:46:20 error: [/auth/sendVerificationMail] - No recipients defined
29-06-2024 12:48:27 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 12:48:27 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 12:48:27 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 12:48:28 error: [/auth/sendVerificationMail] - No recipients defined
29-06-2024 12:52:15 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 12:52:15 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 12:52:15 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 12:52:19 info: [/auth/sendVerificationMail] - success - jalaym123
29-06-2024 12:52:19 debug: [/auth/sendVerificationMail] - id: jalaym123
29-06-2024 12:52:54 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 12:52:54 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 12:52:54 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 12:52:57 info: [/auth/sendVerificationMail] - success - jalaym123
29-06-2024 12:52:57 debug: [/auth/sendVerificationMail] - id: jalaym123
29-06-2024 12:53:30 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 12:53:30 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 12:53:30 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 12:53:30 warn: [/middleWare/mailSent] - verification mail already sent
29-06-2024 12:53:30 debug: [/middleWare/mailSent] - email: jalaym123@gmail.com
29-06-2024 12:53:42 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 12:53:42 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 12:53:42 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 12:53:45 info: [/auth/sendVerificationMail] - success - jalaym123
29-06-2024 12:53:45 debug: [/auth/sendVerificationMail] - id: jalaym123
29-06-2024 12:58:56 error: [/auth/verify] - 
Invalid `prisma.verificationTokens.findUnique()` invocation in
/Users/jalaymovaliya/Odoo-Project/src/api/auth/controller.js:155:67

  152 const verify = async (req, res, next) => {
  153     try {
  154         const { token } = req.params;
→ 155         const verificationToken = await prisma.verificationTokens.findUnique({
                where: {
                  token: "a9d6d59cae0aef7bc601209c16b09b9eff02a72c",
              ?   userId?: String,
              ?   AND?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
              ?   OR?: VerificationTokensWhereInput[],
              ?   NOT?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
              ?   expiresAt?: DateTimeFilter | DateTime,
              ?   createdAt?: DateTimeFilter | DateTime,
              ?   updatedAt?: DateTimeFilter | DateTime,
              ?   user?: UsersRelationFilter | UsersWhereInput
                }
              })

Argument `where` of type VerificationTokensWhereUniqueInput needs at least one of `userId` arguments. Available options are marked with ?.
29-06-2024 13:01:35 error: [/auth/verify] - 
Invalid `prisma.verificationTokens.findUnique()` invocation in
/Users/jalaymovaliya/Odoo-Project/src/api/auth/controller.js:155:67

  152 const verify = async (req, res, next) => {
  153     try {
  154         const { token } = req.params;
→ 155         const verificationToken = await prisma.verificationTokens.findUnique({
                where: {
                  token: "a9d6d59cae0aef7bc601209c16b09b9eff02a72c",
              ?   userId?: String,
              ?   AND?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
              ?   OR?: VerificationTokensWhereInput[],
              ?   NOT?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
              ?   expiresAt?: DateTimeFilter | DateTime,
              ?   createdAt?: DateTimeFilter | DateTime,
              ?   updatedAt?: DateTimeFilter | DateTime,
              ?   user?: UsersRelationFilter | UsersWhereInput
                }
              })

Argument `where` of type VerificationTokensWhereUniqueInput needs at least one of `userId` arguments. Available options are marked with ?.
29-06-2024 13:01:36 error: [/auth/verify] - 
Invalid `prisma.verificationTokens.findUnique()` invocation in
/Users/jalaymovaliya/Odoo-Project/src/api/auth/controller.js:155:67

  152 const verify = async (req, res, next) => {
  153     try {
  154         const { token } = req.params;
→ 155         const verificationToken = await prisma.verificationTokens.findUnique({
                where: {
                  token: "a9d6d59cae0aef7bc601209c16b09b9eff02a72c",
              ?   userId?: String,
              ?   AND?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
              ?   OR?: VerificationTokensWhereInput[],
              ?   NOT?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
              ?   expiresAt?: DateTimeFilter | DateTime,
              ?   createdAt?: DateTimeFilter | DateTime,
              ?   updatedAt?: DateTimeFilter | DateTime,
              ?   user?: UsersRelationFilter | UsersWhereInput
                }
              })

Argument `where` of type VerificationTokensWhereUniqueInput needs at least one of `userId` arguments. Available options are marked with ?.
29-06-2024 13:02:10 error: [/auth/verify] - 
Invalid `prisma.verificationTokens.findUnique()` invocation in
/Users/jalaymovaliya/Odoo-Project/src/api/auth/controller.js:155:67

  152 const verify = async (req, res, next) => {
  153     try {
  154         const { token } = req.params;
→ 155         const verificationToken = await prisma.verificationTokens.findUnique({
                where: {
                  token: "a9d6d59cae0aef7bc601209c16b09b9eff02a72c",
              ?   userId?: String,
              ?   AND?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
              ?   OR?: VerificationTokensWhereInput[],
              ?   NOT?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
              ?   expiresAt?: DateTimeFilter | DateTime,
              ?   createdAt?: DateTimeFilter | DateTime,
              ?   updatedAt?: DateTimeFilter | DateTime,
              ?   user?: UsersRelationFilter | UsersWhereInput
                }
              })

Argument `where` of type VerificationTokensWhereUniqueInput needs at least one of `userId` arguments. Available options are marked with ?.
29-06-2024 13:47:22 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 13:47:22 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 13:47:22 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 13:47:22 warn: [/middleWare/mailSent] - verification mail already sent
29-06-2024 13:47:22 debug: [/middleWare/mailSent] - email: jalaym123@gmail.com
29-06-2024 13:47:32 info: [/middleware/isUser] - user: jalaym123 found
29-06-2024 13:47:32 debug: [/middleware/iseNotVerified] - user: jalaym123.
29-06-2024 13:47:32 info: [/middleware/iseNotVerified] - user: jalaym123 is not verified
29-06-2024 13:47:35 info: [/auth/sendVerificationMail] - success - jalaym123
29-06-2024 13:47:35 debug: [/auth/sendVerificationMail] - id: jalaym123
29-06-2024 13:48:07 error: [/auth/verify] - 
Invalid `prisma.verificationTokens.findUnique()` invocation in
/Users/jalaymovaliya/Odoo-Project/src/api/auth/controller.js:155:67

  152 const verify = async (req, res, next) => {
  153     try {
  154         const { token } = req.params;
→ 155         const verificationToken = await prisma.verificationTokens.findUnique({
                where: {
                  token: "d5d5e60978c29696853bbd0288c3c44ebc517b10",
              ?   userId?: String,
              ?   AND?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
              ?   OR?: VerificationTokensWhereInput[],
              ?   NOT?: VerificationTokensWhereInput | VerificationTokensWhereInput[],
              ?   expiresAt?: DateTimeFilter | DateTime,
              ?   createdAt?: DateTimeFilter | DateTime,
              ?   updatedAt?: DateTimeFilter | DateTime,
              ?   user?: UsersRelationFilter | UsersWhereInput
                }
              })

Argument `where` of type VerificationTokensWhereUniqueInput needs at least one of `userId` arguments. Available options are marked with ?.
29-06-2024 13:48:32 error: [/auth/verify] - 
Invalid `prisma.users.update()` invocation in
/Users/jalaymovaliya/Odoo-Project/src/api/auth/controller.js:174:41

  171         error: "Token expired",
  172     });
  173 }
→ 174 const user = await prisma.users.update({
        where: {
          id: undefined,
      ?   sys_id?: String,
      ?   email?: String,
      ?   AND?: UsersWhereInput | UsersWhereInput[],
      ?   OR?: UsersWhereInput[],
      ?   NOT?: UsersWhereInput | UsersWhereInput[],
      ?   name?: StringFilter | String,
      ?   password?: StringFilter | String,
      ?   type?: EnumUserTypeFilter | UserType,
      ?   phoneNumber?: StringFilter | String,
      ?   address?: StringNullableFilter | String | Null,
      ?   city?: StringNullableFilter | String | Null,
      ?   state?: StringNullableFilter | String | Null,
      ?   zipCode?: StringNullableFilter | String | Null,
      ?   country?: StringNullableFilter | String | Null,
      ?   createdAt?: DateTimeFilter | DateTime,
      ?   updatedAt?: DateTimeFilter | DateTime,
      ?   isVerified?: BoolFilter | Boolean,
      ?   collectionRequests?: CollectionRequestListRelationFilter,
      ?   payments?: PaymentListRelationFilter,
      ?   recycler?: RecyclerNullableRelationFilter | RecyclerWhereInput | Null,
      ?   verificationTokens?: VerificationTokensListRelationFilter
        },
        data: {
          isVerified: true
        }
      })

Argument `where` of type UsersWhereUniqueInput needs at least one of `sys_id`, `id` or `email` arguments. Available options are marked with ?.
29-06-2024 13:49:02 info: [/auth/verify] - success - jalaym123
29-06-2024 13:49:02 debug: [/auth/verify] - id: jalaym123
29-06-2024 15:02:57 error: [/auth/register] - id is not defined
29-06-2024 15:03:10 error: [/auth/register] - newuser is not defined
29-06-2024 15:03:38 info: [/auth/register] - success - 5f065d5e-0e10-4e4b-ac75-89ee7eee5ae8
29-06-2024 15:03:38 error: [/auth/register] - id is not defined
29-06-2024 15:05:06 warn: [/auth/register] - email already exists
29-06-2024 15:05:06 debug: [/auth/register] - email: 22ce070@charusat.edu.in
29-06-2024 15:05:26 warn: [/auth/register] - email already exists
29-06-2024 15:05:26 debug: [/auth/register] - email: 22ce070@charusat.edu.in
29-06-2024 15:06:36 warn: [/auth/register] - email already exists
29-06-2024 15:06:36 debug: [/auth/register] - email: 22ce070@charusat.edu.in
29-06-2024 15:07:44 warn: [/auth/register] - email already exists
29-06-2024 15:07:44 debug: [/auth/register] - email: 22ce070@charusat.edu.in
29-06-2024 15:08:25 warn: [/auth/register] - email already exists
29-06-2024 15:08:25 debug: [/auth/register] - email: 22ce070@charusat.edu.in
29-06-2024 15:08:32 info: [/auth/register] - success - 8b5f756d-b612-4cc4-bd90-58b6c656e415
29-06-2024 15:08:32 error: [/auth/register] - id is not defined
29-06-2024 15:08:48 info: [/auth/register] - success - fcaee627-3d3a-4a42-af12-c94a506b9571
29-06-2024 15:08:48 debug: [/auth/register] - email: 22ce070@charusat.edu.in
29-06-2024 15:08:48 error: [/auth/register] - newuser is not defined
29-06-2024 15:09:01 warn: [/auth/register] - email already exists
29-06-2024 15:09:01 debug: [/auth/register] - email: 22ce070@charusat.edu.in
29-06-2024 15:09:08 info: [/auth/register] - success - fd874294-60a5-44e7-82f0-4c2699e0d160
29-06-2024 15:09:08 debug: [/auth/register] - email: 22ce070@charusat.edu.in
29-06-2024 15:09:08 error: [/auth/register] - 
Invalid `prisma.verificationTokens.create()` invocation in
/Users/jalaymovaliya/Odoo-Project/server/src/api/auth/controller.js:50:67

  47 
  48 // send verification email with link
  49 const token = crypto.randomBytes(20).toString("hex");
→ 50 const verificationToken = await prisma.verificationTokens.create({
       data: {
         token: "52a8cffc076d716eb9d63115d0c8fab9f0bdf9a0",
         expiration: new Date("2024-06-30T09:39:08.186Z"),
         user_id: undefined,
     +   expiresAt: DateTime
       }
     })

Argument `expiresAt` is missing.
29-06-2024 15:10:06 warn: [/auth/register] - email already exists
29-06-2024 15:10:06 debug: [/auth/register] - email: 22ce070@charusat.edu.in
29-06-2024 15:10:22 info: [/auth/register] - success - 0b902c7c-1776-43be-92b6-bf5d92f0dfc1
29-06-2024 15:10:22 debug: [/auth/register] - email: 22ce070@charusat.edu.in
29-06-2024 15:10:22 error: [/auth/register] - 
Invalid `prisma.verificationTokens.create()` invocation in
/Users/jalaymovaliya/Odoo-Project/server/src/api/auth/controller.js:50:67

  47 
  48 // send verification email with link
  49 const token = crypto.randomBytes(20).toString("hex");
→ 50 const verificationToken = await prisma.verificationTokens.create({
       data: {
         token: "a0afe3b25c976eb0db0fc124f61289d0d4b127b2",
         expiration: new Date("2024-06-30T09:40:22.002Z"),
         userSysId: undefined,
     +   expiresAt: DateTime
       }
     })

Argument `expiresAt` is missing.
29-06-2024 15:10:52 info: [/auth/register] - success - 1372dafb-d083-44e2-9cdf-2095955cb458
29-06-2024 15:10:52 debug: [/auth/register] - email: 22ce070@charusat.edu.in
29-06-2024 15:10:52 error: [/auth/register] - 
Invalid `prisma.verificationTokens.create()` invocation in
/Users/jalaymovaliya/Odoo-Project/server/src/api/auth/controller.js:50:67

  47 
  48 // send verification email with link
  49 const token = crypto.randomBytes(20).toString("hex");
→ 50 const verificationToken = await prisma.verificationTokens.create({
       data: {
         userSysId: undefined,
         token: "afdf2cc6d2540baf4f124e0876735bd56ff1da2f",
         expiresAt: new Date("2024-06-30T09:40:52.140Z"),
     +   user: {
     +     create: UsersCreateWithoutVerificationTokensInput | UsersUncheckedCreateWithoutVerificationTokensInput,
     +     connectOrCreate: UsersCreateOrConnectWithoutVerificationTokensInput,
     +     connect: UsersWhereUniqueInput
     +   }
       }
     })

Argument `user` is missing.
29-06-2024 15:11:20 warn: [/auth/register] - email already exists
29-06-2024 15:11:20 debug: [/auth/register] - email: 22ce070@charusat.edu.in
29-06-2024 15:11:27 info: [/auth/register] - success - 39002222-dc69-4154-aa7d-9dd4f4158bc7
29-06-2024 15:11:27 debug: [/auth/register] - email: 22ce070@charusat.edu.in
29-06-2024 15:11:27 error: [/auth/register] - 
Invalid `prisma.verificationTokens.create()` invocation in
/Users/jalaymovaliya/Odoo-Project/server/src/api/auth/controller.js:50:67

  47 
  48 // send verification email with link
  49 const token = crypto.randomBytes(20).toString("hex");
→ 50 const verificationToken = await prisma.verificationTokens.create({
       data: {
         userSysId: undefined,
         token: "23e0fb8905c316e0dec554ec6a81c4dbd67d6593",
         expiresAt: new Date("2024-06-30T09:41:27.690Z"),
     +   user: {
     +     create: UsersCreateWithoutVerificationTokensInput | UsersUncheckedCreateWithoutVerificationTokensInput,
     +     connectOrCreate: UsersCreateOrConnectWithoutVerificationTokensInput,
     +     connect: UsersWhereUniqueInput
     +   }
       }
     })

Argument `user` is missing.
29-06-2024 15:13:39 warn: [/auth/register] - email already exists
29-06-2024 15:13:39 debug: [/auth/register] - email: 22ce070@charusat.edu.in
29-06-2024 15:13:45 info: [/auth/register] - success - 0fbd9cab-1879-453c-a240-2452a2c443a2
29-06-2024 15:13:45 debug: [/auth/register] - email: 22ce070@charusat.edu.in
29-06-2024 15:13:45 error: [/auth/register] - 
Invalid `prisma.verificationTokens.create()` invocation in
/Users/jalaymovaliya/Odoo-Project/server/src/api/auth/controller.js:50:67

  47 
  48 // send verification email with link
  49 const token = crypto.randomBytes(20).toString("hex");
→ 50 const verificationToken = await prisma.verificationTokens.create({
       data: {
         userSysId: undefined,
         token: "30d1e16e991cc330e88a51e8d5d833893a797170",
         expiresAt: new Date("2024-06-30T09:43:45.840Z"),
     +   user: {
     +     create: UsersCreateWithoutVerificationTokensInput | UsersUncheckedCreateWithoutVerificationTokensInput,
     +     connectOrCreate: UsersCreateOrConnectWithoutVerificationTokensInput,
     +     connect: UsersWhereUniqueInput
     +   }
       }
     })

Argument `user` is missing.
29-06-2024 15:15:17 warn: [/auth/register] - email already exists
29-06-2024 15:15:17 debug: [/auth/register] - email: 22ce070@charusat.edu.in
29-06-2024 15:15:25 info: [/auth/register] - success - 2ea54476-efad-4a5a-af6d-966b2026686f
29-06-2024 15:15:25 debug: [/auth/register] - email: 22ce070@charusat.edu.in
29-06-2024 15:15:25 error: [/auth/register] - 
Invalid `prisma.verificationTokens.create()` invocation in
/Users/jalaymovaliya/Odoo-Project/server/src/api/auth/controller.js:50:67

  47 
  48 // send verification email with link
  49 const token = crypto.randomBytes(20).toString("hex");
→ 50 const verificationToken = await prisma.verificationTokens.create({
       data: {
         userSysId: undefined,
         token: "02c0ee95fe8153cc8411ebc658e050e2a48562c8",
         expiresAt: new Date("2024-06-30T09:45:25.568Z"),
     +   expiration: DateTime
       }
     })

Argument `expiration` is missing.
29-06-2024 15:15:54 warn: [/auth/register] - email already exists
29-06-2024 15:15:54 debug: [/auth/register] - email: 22ce070@charusat.edu.in
29-06-2024 15:16:02 info: [/auth/register] - success - 41c2e1f0-6b5a-492d-a054-a28b227858c6
29-06-2024 15:16:02 debug: [/auth/register] - email: 22ce070@charusat.edu.in
29-06-2024 15:16:02 error: [/auth/register] - 
Invalid `prisma.verificationTokens.create()` invocation in
/Users/jalaymovaliya/Odoo-Project/server/src/api/auth/controller.js:50:67

  47 
  48 // send verification email with link
  49 const token = crypto.randomBytes(20).toString("hex");
→ 50 const verificationToken = await prisma.verificationTokens.create({
       data: {
         userSysId: undefined,
         token: "020bbe03f028276042df029ff29b1e7f65811b76",
         expiresAt: new Date("2024-06-30T09:46:02.457Z"),
     +   expiration: DateTime
       }
     })

Argument `expiration` is missing.
29-06-2024 15:16:32 warn: [/auth/register] - email already exists
29-06-2024 15:16:32 debug: [/auth/register] - email: 22ce070@charusat.edu.in
29-06-2024 15:16:39 info: [/auth/register] - success - 62ff73db-988e-40d0-a959-0e379247165d
29-06-2024 15:16:39 debug: [/auth/register] - email: 22ce070@charusat.edu.in
29-06-2024 15:16:39 error: [/auth/register] - 
Invalid `prisma.verificationTokens.create()` invocation in
/Users/jalaymovaliya/Odoo-Project/server/src/api/auth/controller.js:50:67

  47 
  48 // send verification email with link
  49 const token = crypto.randomBytes(20).toString("hex");
→ 50 const verificationToken = await prisma.verificationTokens.create({
       data: {
         userSysId: undefined,
         token: "82e638fe665e29e07814574fd8684d74e4e7fb6a",
         expiresAt: new Date("2024-06-30T09:46:39.638Z"),
     +   user: {
     +     create: UsersCreateWithoutVerificationTokensInput | UsersUncheckedCreateWithoutVerificationTokensInput,
     +     connectOrCreate: UsersCreateOrConnectWithoutVerificationTokensInput,
     +     connect: UsersWhereUniqueInput
     +   }
       }
     })

Argument `user` is missing.
29-06-2024 15:18:26 warn: [/auth/register] - email already exists
29-06-2024 15:18:26 debug: [/auth/register] - email: 22ce070@charusat.edu.in
29-06-2024 15:18:32 info: [/auth/register] - success - 727c536d-b463-4ec3-a225-0847d2735e7c
29-06-2024 15:18:32 debug: [/auth/register] - email: 22ce070@charusat.edu.in
29-06-2024 15:18:32 error: [/auth/register] - 
Invalid `prisma.verificationTokens.create()` invocation in
/Users/jalaymovaliya/Odoo-Project/server/src/api/auth/controller.js:50:67

  47 
  48 // send verification email with link
  49 const token = crypto.randomBytes(20).toString("hex");
→ 50 const verificationToken = await prisma.verificationTokens.create({
       data: {
         userSysId: undefined,
         token: "34147219b20453ee19cb4cb9eee13ed81a22c485",
         expiresAt: new Date("2024-06-30T09:48:32.672Z"),
     +   user: {
     +     create: UsersCreateWithoutVerificationTokensInput | UsersUncheckedCreateWithoutVerificationTokensInput,
     +     connectOrCreate: UsersCreateOrConnectWithoutVerificationTokensInput,
     +     connect: UsersWhereUniqueInput
     +   }
       }
     })

Argument `user` is missing.
29-06-2024 15:18:56 warn: [/auth/register] - email already exists
29-06-2024 15:18:56 debug: [/auth/register] - email: 22ce070@charusat.edu.in
29-06-2024 15:19:02 info: [/auth/register] - success - ed3da27d-e305-4db6-a952-9ef2af66610d
29-06-2024 15:19:02 debug: [/auth/register] - email: 22ce070@charusat.edu.in
29-06-2024 15:19:02 error: [/auth/register] - 
Invalid `prisma.verificationTokens.create()` invocation in
/Users/jalaymovaliya/Odoo-Project/server/src/api/auth/controller.js:50:67

  47 
  48 // send verification email with link
  49 const token = crypto.randomBytes(20).toString("hex");
→ 50 const verificationToken = await prisma.verificationTokens.create({
       data: {
         userSysId: undefined,
         token: "5e923a72640a0f3160b9128c5530d50e4e32cae6",
         expiration: new Date("2024-06-30T09:49:02.909Z"),
     +   expiresAt: DateTime
       }
     })

Argument `expiresAt` is missing.
29-06-2024 15:21:22 warn: [/auth/register] - email already exists
29-06-2024 15:21:22 debug: [/auth/register] - email: 22ce070@charusat.edu.in
29-06-2024 15:21:31 info: [/auth/register] - success - 3ff6570c-218b-48c3-992f-3ee1de11781b
29-06-2024 15:21:31 debug: [/auth/register] - email: 22ce070@charusat.edu.in
29-06-2024 15:21:31 error: [/auth/register] - 
Invalid `prisma.verificationTokens.create()` invocation in
/Users/jalaymovaliya/Odoo-Project/server/src/api/auth/controller.js:50:67

  47 
  48 // send verification email with link
  49 const token = crypto.randomBytes(20).toString("hex");
→ 50 const verificationToken = await prisma.verificationTokens.create({
       data: {
         userSysId: undefined,
         token: "9824366c635d42e4511d4247d317ad6c9cd0ab95",
         expiresAt: new Date("2024-06-30T09:51:31.237Z"),
     +   user: {
     +     create: UsersCreateWithoutVerificationTokensInput | UsersUncheckedCreateWithoutVerificationTokensInput,
     +     connectOrCreate: UsersCreateOrConnectWithoutVerificationTokensInput,
     +     connect: UsersWhereUniqueInput
     +   }
       }
     })

Argument `user` is missing.
29-06-2024 15:24:37 info: [/auth/register] - success - 6d1124a8-33fb-47bb-9977-dd71a0183c4b
29-06-2024 15:24:37 debug: [/auth/register] - email: 22ce070@charusat.edu.in
29-06-2024 15:24:39 error: [/auth/register] - Invalid login: 535-5.7.8 Username and Password not accepted. For more information, go to
535 5.7.8  https://support.google.com/mail/?p=BadCredentials d9443c01a7336-1fac1535e01sm29563875ad.163 - gsmtp
29-06-2024 15:25:27 info: [/auth/register] - success - a3b8215d-30dd-4c39-984f-4d148baa73dc
29-06-2024 15:25:27 debug: [/auth/register] - email: 22ce070@charusat.edu.in
29-06-2024 15:25:28 error: [/auth/register] - Invalid login: 535-5.7.8 Username and Password not accepted. For more information, go to
535 5.7.8  https://support.google.com/mail/?p=BadCredentials 41be03b00d2f7-72c6b584624sm2376835a12.53 - gsmtp
29-06-2024 15:25:42 warn: [/auth/register] - email already exists
29-06-2024 15:25:43 debug: [/auth/register] - email: 22ce070@charusat.edu.in
29-06-2024 15:25:53 info: [/auth/register] - success - 41a3f450-781f-4fd1-8a4d-7072e8c5c00e
29-06-2024 15:25:53 debug: [/auth/register] - email: 22ce070@charusat.edu.in
29-06-2024 15:25:55 error: [/auth/register] - No recipients defined
29-06-2024 15:26:40 warn: [/auth/register] - email already exists
29-06-2024 15:26:40 debug: [/auth/register] - email: 22ce070@charusat.edu.in
29-06-2024 15:26:47 info: [/auth/register] - success - b631b9fb-3879-4844-890a-e53ab01269c4
29-06-2024 15:26:47 debug: [/auth/register] - email: 22ce070@charusat.edu.in
29-06-2024 15:26:48 error: [/auth/register] - No recipients defined
29-06-2024 15:27:34 info: [/auth/register] - success - 6f2c9ea9-e979-4e12-b1cc-450a552afb02
29-06-2024 15:27:34 debug: [/auth/register] - email: 22ce070@charusat.edu.in
29-06-2024 15:27:35 error: [/auth/register] - No recipients defined
29-06-2024 15:28:35 info: [/auth/register] - success - e41d2cae-8c9f-4eb3-b9fc-d017753d8812
29-06-2024 15:28:35 debug: [/auth/register] - email: 22ce070@charusat.edu.in
29-06-2024 15:29:23 info: [/auth/register] - success - ac34c152-4067-42a0-b768-96a937b9ef61
29-06-2024 15:29:23 debug: [/auth/register] - email: jalaym123@gmail.com
29-06-2024 15:30:59 info: [/auth/register] - success - 3d3cc48f-d3b8-4d59-ba2e-c5115c72e495
29-06-2024 15:30:59 debug: [/auth/register] - email: 22ce071@charusat.edu.in
29-06-2024 15:36:17 error: [/auth/login] - secretOrPrivateKey must have a value
29-06-2024 15:37:38 error: [/auth/login] - secretOrPrivateKey must have a value
29-06-2024 15:37:44 info: [/auth/login] - success - 3d3cc48f-d3b8-4d59-ba2e-c5115c72e495
29-06-2024 15:37:44 debug: [/auth/login] - email: 22ce071@charusat.edu.in
29-06-2024 15:38:07 info: [/auth/login] - success - 3d3cc48f-d3b8-4d59-ba2e-c5115c72e495
29-06-2024 15:38:07 debug: [/auth/login] - email: 22ce071@charusat.edu.in
29-06-2024 15:38:10 info: [/auth/login] - success - 3d3cc48f-d3b8-4d59-ba2e-c5115c72e495
29-06-2024 15:38:10 debug: [/auth/login] - email: 22ce071@charusat.edu.in
29-06-2024 15:39:17 info: [/auth/login] - success - 3d3cc48f-d3b8-4d59-ba2e-c5115c72e495
29-06-2024 15:39:17 debug: [/auth/login] - email: 22ce071@charusat.edu.in
29-06-2024 15:39:19 info: [/auth/login] - success - 3d3cc48f-d3b8-4d59-ba2e-c5115c72e495
29-06-2024 15:39:19 debug: [/auth/login] - email: 22ce071@charusat.edu.in
29-06-2024 15:39:21 info: [/auth/login] - success - 3d3cc48f-d3b8-4d59-ba2e-c5115c72e495
29-06-2024 15:39:21 debug: [/auth/login] - email: 22ce071@charusat.edu.in
29-06-2024 15:39:36 info: [/auth/login] - success - 3d3cc48f-d3b8-4d59-ba2e-c5115c72e495
29-06-2024 15:39:36 debug: [/auth/login] - email: 22ce071@charusat.edu.in
29-06-2024 15:39:57 warn: [/auth/login] - invalid password
29-06-2024 15:39:57 debug: [/auth/login] - email: 22ce071@charusat.edu.in
29-06-2024 15:40:07 warn: [/auth/login] - invalid password
29-06-2024 15:40:07 debug: [/auth/login] - email: 22ce071@charusat.edu.in
29-06-2024 15:40:08 warn: [/auth/login] - invalid password
29-06-2024 15:40:08 debug: [/auth/login] - email: 22ce071@charusat.edu.in
29-06-2024 15:40:21 info: [/auth/login] - success - 3d3cc48f-d3b8-4d59-ba2e-c5115c72e495
29-06-2024 15:40:21 debug: [/auth/login] - email: 22ce071@charusat.edu.in
29-06-2024 16:19:35 info: [/auth/register] - success - dfe6b5a7-0d5c-4444-9d0c-cc940535d06b
29-06-2024 16:19:35 debug: [/auth/register] - email: jalaym123@gmail.com
29-06-2024 16:21:26 info: [/auth/register] - success - 58215d88-fc10-420e-9d35-56f311d34511
29-06-2024 16:21:26 debug: [/auth/register] - email: jalaym123@gmail.com
29-06-2024 16:22:08 info: [/auth/register] - success - 718c29df-644f-4386-a1b7-2277fd08ea2b
29-06-2024 16:22:08 debug: [/auth/register] - email: jalaym123@gmail.com
29-06-2024 16:29:12 info: [/auth/register] - success - 4cff7e01-cc3e-452e-a1b9-6e5d9f81e4ac
29-06-2024 16:29:12 debug: [/auth/register] - email: jalaym123@gmail.com
29-06-2024 16:30:46 info: [/auth/register] - success - cc9758d6-fcec-4d03-a194-1f3c0bd2c271
29-06-2024 16:30:46 debug: [/auth/register] - email: 22ce071@charusat.edu.in
29-06-2024 16:31:48 info: [/auth/register] - success - 6ae21a5d-acde-47fd-a3fd-4b5f85daf3c7
29-06-2024 16:31:48 debug: [/auth/register] - email: jalaym123@gmail.com
29-06-2024 16:32:19 info: [/auth/register] - success - b8217f31-8d60-4901-8ef0-d37dbba8819b
29-06-2024 16:32:19 debug: [/auth/register] - email: jalaym123@gmail.com
29-06-2024 16:49:34 info: [/auth/register] - success - d153f2e8-3f66-442c-8135-99d37f4fd322
29-06-2024 16:49:34 debug: [/auth/register] - email: jalaym123@gmail.com
29-06-2024 16:51:10 info: [/auth/register] - success - f03c2d64-fc9d-4256-add3-b1be35c1f931
29-06-2024 16:51:10 debug: [/auth/register] - email: jalaym123@gmail.com
29-06-2024 16:51:37 info: [/auth/register] - success - 59b28691-c382-415a-9115-81e3c6d9d7f8
29-06-2024 16:51:37 debug: [/auth/register] - email: jalaym123@gmail.com
29-06-2024 16:54:22 error: [/auth/register] - 
Invalid `prisma.users.create()` invocation in
/Users/jalaymovaliya/Odoo-Project/server/src/api/auth/controller.js:30:44

  27 const salt = await bcrypt.genSalt(10);
  28 const hashedPassword = await bcrypt.hash(password, salt);
  29 console.log(type)
→ 30 const newUser = await prisma.users.create({
       data: {
         name: "wdf wgref",
         email: "jalaym123@gmail.com",
         password: "$2b$10$9k6t068bHh1ti4Pbd4ec0uJE.RjVQ2NY1IHLWd5.jDibziwJdXYT.",
         phoneNumber: "8780279011",
         city: undefined,
         country: undefined,
         state: undefined,
         zipCode: "395006",
         type: "INDIVIDUAL"
               ~~~~~~~~~~~~
       }
     })

Invalid value for argument `type`. Expected UserType.
29-06-2024 16:55:14 info: [/auth/register] - success - 4130f8fe-cbb1-4b0b-8074-ad872b5a0505
29-06-2024 16:55:14 debug: [/auth/register] - email: jalaym123@gmail.com
29-06-2024 17:17:12 warn: [/middleware/verifyJWT] - token missing
29-06-2024 17:17:12 debug: [/middleware/verifyJWT] - token: undefined
29-06-2024 17:17:25 error: [/middleware/verifyJWT] - invalid signature
29-06-2024 17:17:36 warn: [/auth/login] - invalid password
29-06-2024 17:17:36 debug: [/auth/login] - email: jalaym123@gmail.com
29-06-2024 17:17:46 warn: [/auth/login] - invalid password
29-06-2024 17:17:46 debug: [/auth/login] - email: jalaym123@gmail.com
29-06-2024 17:17:49 info: [/auth/login] - success - 4130f8fe-cbb1-4b0b-8074-ad872b5a0505
29-06-2024 17:17:49 debug: [/auth/login] - email: jalaym123@gmail.com
29-06-2024 17:17:59 info: [/middleware/verifyJWT] - user: undefined authenticated
29-06-2024 17:18:53 info: [/middleware/verifyJWT] - user: undefined authenticated
29-06-2024 17:19:58 info: [/middleware/verifyJWT] - user: undefined authenticated
29-06-2024 17:21:25 info: [/middleware/verifyJWT] - user: undefined authenticated
29-06-2024 17:25:47 info: [/middleware/verifyJWT] - user: undefined authenticated
29-06-2024 17:27:22 info: [/middleware/verifyJWT] - user: undefined authenticated
29-06-2024 17:27:59 info: [/middleware/verifyJWT] - user: undefined authenticated
29-06-2024 17:28:13 info: [/middleware/verifyJWT] - user: undefined authenticated
29-06-2024 17:28:23 info: [/middleware/verifyJWT] - user: undefined authenticated
29-06-2024 17:28:29 info: [/middleware/verifyJWT] - user: undefined authenticated
29-06-2024 17:28:29 info: [/middleware/verifyJWT] - user: undefined authenticated
29-06-2024 17:28:46 info: [/middleware/verifyJWT] - user: undefined authenticated
29-06-2024 17:29:30 info: [/middleware/verifyJWT] - user: undefined authenticated
29-06-2024 17:37:25 warn: [/middleware/verifyJWT] - token missing
29-06-2024 17:37:25 debug: [/middleware/verifyJWT] - token: undefined
29-06-2024 17:37:34 info: [/middleware/verifyJWT] - user: undefined authenticated
29-06-2024 17:37:49 info: [/middleware/verifyJWT] - user: undefined authenticated
29-06-2024 17:45:20 info: [/middleware/verifyJWT] - user: undefined authenticated
29-06-2024 17:46:45 info: [/middleware/verifyJWT] - user: undefined authenticated
